<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<entry key="insertFeed">
		INSERT
		    INTO FEED
		    (   
		        FEED_INDEX
		      , FEED_TITLE
		      , FEED_CNT
		      , FEED_EVAL
		      , FEED_PUBLIC_TYPE
		      , FEED_PATH_NY
		      , DISTANCE
		      , START_LAT
		      , START_LON
		      , MEM_ID
		      , IMGPATH
		    )
		    VALUES
		    (
		       SEQ_FEED_INDEX.NEXTVAL
		     , ?
		     , ?
		     , ?
		     , ?
		     , ?
		     , ?
		     , ?
		     , ?
		     , ?
		     , ?
		    )
	</entry>
	
	<entry key="insertGpx">
		INSERT
		    INTO GPX_FILES
		    (
		       GPX_NO
		     , FEED_INDEX
		     , ORIGIN_NAME
		     , CHANGE_NAME
		     , FILE_PATH
		    )
		    VALUES
		    (
		      SEQ_GPX_FILES.NEXTVAL
		    , SEQ_FEED_INDEX.CURRVAL
		    , ?
		    , ?
		    , ?
		    )
	</entry>
	

<entry key="selectAllFeedList">
	SELECT 
	       FEED_INDEX
	     , FEED_DATE
	     , FEED_TITLE
	     , FEED_CNT
	     , FEED_EVAL
	     , FEED_PATH_NY
	     , FEED_RPR_DATE
	     , DISTANCE
	     , START_LAT
	     , START_LON
	     , MEM_NICK
	 FROM FEED
	 JOIN MEMBER USING(MEM_ID)
	WHERE FEED_PUBLIC_TYPE ='전체'
	  AND FEED_RPR_NY = 'N'
	  AND FEED_DEL_NY = 'N'
	ORDER
	    BY FEED_INDEX DESC
</entry>

<!-- 전체피드 조회(vo수정후 최종) -->
<entry key="selectArrayList">
    SELECT 
          FEED_INDEX
        , TO_CHAR(FEED_DATE,'YYYY-MM-DD HH24:MI') "DATE"
        , FEED_TITLE
        , FEED_CNT
        , FEED_EVAL
        , FEED_PUBLIC_TYPE
		, FEED_PATH_NY
        , DISTANCE
        , START_LAT
        , START_LON
        , MEM_ID
        , MEM_NAME
        , MEM_NICK
        , REPLACE(REPLACE(ORIGIN_NAME, '_', ' '), '.gpx', '') as ORIGIN_NAME
        , CHANGE_NAME
        , IMGPATH
     FROM FEED
     JOIN GPX_FILES USING(FEED_INDEX)
     JOIN MEMBER USING(MEM_ID)
	WHERE FEED_PUBLIC_TYPE ='전체'
	  AND MEM_ID NOT IN (SELECT CUT_ID FROM CUT C WHERE C.MEM_ID = ? AND CUT_STATUS ='Y')
	AND FEED_RPR_NY ='N'
	AND FEED_DEL_NY = 'N' 
	ORDER BY FEED_INDEX DESC
</entry>
	
	<entry key="selectAllFeedList">
		SELECT 
		       FEED_INDEX
		     , FEED_DATE
		     , FEED_TITLE
		     , FEED_CNT
		     , FEED_EVAL
		     , FEED_PATH_NY
		     , FEED_RPR_DATE
		     , DISTANCE
		     , START_LAT
		     , START_LON
		     , MEM_NICK
		 FROM FEED
		 JOIN MEMBER USING(ME
		 M_ID)
		WHERE FEED_PUBLIC_TYPE ='전체'
		  AND FEED_RPR_NY = 'N'
		  AND FEED_DEL_NY = 'N'
		ORDER
		    BY FEED_INDEX DESC
	</entry>
	<entry key="selectFeedDetail">
		SELECT 
				FEED_INDEX
			  , TO_CHAR(FEED_DATE,'YYYY-MM-DD HH:mm:SS') "FEED_DATE"
			  , FEED_TITLE
			  , FEED_CNT
			  , FEED_EVAL
			  , DISTANCE
			  , START_LAT
			  , START_LON
		      , MEM_ID
		      , CHANGE_NAME
		      , ORIGIN_NAME
		      , HIT
		      , COUNT(CASE WHEN BK_STATUS = 'Y' THEN 1 ELSE NULL END) "COUNT"
		   FROM FEED
		JOIN GPX_FILES USING(FEED_INDEX)
		LEFT JOIN BOOKMARK ON(BK_NO = FEED_INDEX) 
        WHERE FEED_INDEX = ?
        AND FEED_RPR_NY = 'N'
        AND FEED_DEL_NY = 'N'
        GROUP BY FEED_INDEX, TO_CHAR(FEED_DATE,'YYYY-MM-DD HH:mm:SS'), FEED_TITLE, FEED_CNT, FEED_EVAL, 
        DISTANCE, START_LAT, START_LON, MEM_ID, CHANGE_NAME, ORIGIN_NAME, HIT
	</entry>
	
	<entry key="insertcomments">
	INSERT
	    INTO 	FEED_COMMENTS
	    (
	      FEED_CMN_NO
	    , FEED_CMN_ID
	    , FEED_CMN_CNT
	    , FEED_CMN_DATE
	    , FEED_INDEX
	    )
	    VALUES
	    (
	      SEQ_FEED_CMN_NO.NEXTVAL
	    , ?
	    , ?
	    , SYSDATE
	    , ?

	    )

</entry>

<entry key="selectdetail2">
	SELECT		
		        FEED_CMN_NO
		      , FEED_CMN_ID
		      , FEED_CMN_CNT
		      , to_char(FEED_CMN_DATE,'yyyy-mm-dd hh24:mi:ss') "FEED_CMN_DATE"
		   FROM FEED_COMMENTS 
		  WHERE FEED_INDEX = ?
		  ORDER
		     BY FEED_CMN_NO DESC

</entry>


<entry key="updateCount">
	UPDATE
        FEED
    SET HIT = HIT + 1
    WHERE FEED_INDEX = ?
    AND FEED_RPR_NY = 'N'

</entry>
<entry key="wishListCount">

	SELECT
      
	     COUNT(CASE WHEN BK_STATUS = 'Y' THEN 1 ELSE NULL END) "COUNT"
	FROM FEED
	JOIN GPX_FILES USING(FEED_INDEX)
	LEFT JOIN BOOKMARK ON(BK_NO = FEED_INDEX)
  WHERE FEED_PATH_NY = 'Y'
	AND FEED_RPR_NY ='N'
	AND FEED_DEL_NY = 'N'
	AND FEED_INDEX = ?
	GROUP BY FEED_INDEX, TO_CHAR(FEED_DATE,'YYYY-MM-DD'), FEED_TITLE, FEED_EVAL, DISTANCE, START_LAT, START_LON, MEM_ID, CHANGE_NAME,HIT

</entry>

<!-- 친구 피드만 조회 -->
<entry key="selectFriendList">
    SELECT DISTINCT
           FEED_INDEX
         , TO_CHAR(FEED_DATE,'YYYY-MM-DD HH24:MI') "DATE"
         , FEED_TITLE
         , FEED_CNT
         , FEED_EVAL
         , FEED_PUBLIC_TYPE
         , FEED_PATH_NY
         , DISTANCE
         , START_LAT
         , START_LON
         , M.MEM_ID
         , MEM_NAME
         , MEM_NICK
         , REPLACE(REPLACE(ORIGIN_NAME, '_', ' '), '.gpx', '') as ORIGIN_NAME
         , CHANGE_NAME
         , IMGPATH
      FROM FEED FE
      JOIN FOLLOW FW ON(FE.MEM_ID = FW.FLW_ID )
      JOIN GPX_FILES G USING(FEED_INDEX)
      JOIN MEMBER M on( M.MEM_ID=FE.MEM_ID)
	 WHERE FE.MEM_ID IN (SELECT FLW_ID FROM FOLLOW F WHERE F.MEM_ID = ? AND FLW_STATUS ='Y')
	   AND FE.MEM_ID NOT IN (SELECT CUT_ID FROM CUT C WHERE C.MEM_ID = ? AND CUT_STATUS ='Y')
	   AND FEED_PUBLIC_TYPE != '비공개'
	   AND FEED_RPR_NY ='N'
	   AND FEED_DEL_NY = 'N' 
	ORDER 
		BY FEED_INDEX DESC
</entry>

	
<!-- 내 피드만 조회 -->
<entry key="selectMyList">
	SELECT 
           FEED_INDEX
         , TO_CHAR(FEED_DATE,'YYYY-MM-DD HH24:MI') "DATE"
         , FEED_TITLE
         , FEED_CNT
         , FEED_EVAL
         , FEED_PUBLIC_TYPE
         , FEED_PATH_NY
         , DISTANCE
         , START_LAT
         , START_LON
         , MEM_ID
         , MEM_NAME
         , MEM_NICK
         , REPLACE(REPLACE(ORIGIN_NAME, '_', ' '), '.gpx', '') as ORIGIN_NAME
         , CHANGE_NAME
         , IMGPATH
	  FROM FEED F
	  JOIN GPX_FILES G USING(FEED_INDEX)
	  JOIN MEMBER M USING(MEM_ID)
	 WHERE MEM_ID = ?
	   AND FEED_RPR_NY ='N'
	   AND FEED_DEL_NY ='N' 
	 ORDER 
	    BY FEED_INDEX DESC
</entry>


<!-- 작성자로 피드 검색-->
<entry key="selectIdSearchList">
	SELECT 
		  FEED_INDEX
		, TO_CHAR(FEED_DATE,'YYYY-MM-DD HH24:MI') "DATE"
		, FEED_TITLE
		, FEED_CNT
		, FEED_EVAL
		, DISTANCE
		, START_LAT
		, START_LON
		, MEM_ID
		, MEM_NAME
		, MEM_NICK
		, REPLACE(REPLACE(ORIGIN_NAME, '_', ' '), '.gpx', '') as ORIGIN_NAME
		, CHANGE_NAME
		, IMGPATH
	FROM FEED
	JOIN GPX_FILES USING(FEED_INDEX)
	JOIN MEMBER USING(MEM_ID)
	WHERE FEED_PUBLIC_TYPE ='전체'
	AND FEED_RPR_NY ='N'
	AND FEED_DEL_NY = 'N' 
	AND (MEM_ID like ? OR MEM_NAME like ? OR MEM_NICK like ? )
	ORDER BY FEED_INDEX DESC
</entry>


<!-- 피드제목으로 검색 -->
<entry key="selectTitleSearchList">
	SELECT 
		  FEED_INDEX
		, TO_CHAR(FEED_DATE,'YYYY-MM-DD HH24:MI') "DATE"
		, FEED_TITLE
		, FEED_CNT
		, FEED_EVAL
		, DISTANCE
		, START_LAT
		, START_LON
		, MEM_ID
		, MEM_NAME
		, MEM_NICK
		, REPLACE(REPLACE(ORIGIN_NAME, '_', ' '), '.gpx', '') as ORIGIN_NAME
		, CHANGE_NAME
		, IMGPATH
	FROM FEED
	JOIN GPX_FILES USING(FEED_INDEX)
	JOIN MEMBER USING(MEM_ID)
	WHERE FEED_PUBLIC_TYPE ='전체'
	AND FEED_RPR_NY ='N'
	AND FEED_DEL_NY = 'N' 
	AND FEED_TITLE LIKE ?
	ORDER BY FEED_INDEX DESC

</entry>

<!-- 피드 내용으로 검색  -->
<entry key="selectCntSearchList">
	SELECT 
		  FEED_INDEX
		, TO_CHAR(FEED_DATE,'YYYY-MM-DD HH24:MI') "DATE"
		, FEED_TITLE
		, FEED_CNT
		, FEED_EVAL
		, DISTANCE
		, START_LAT
		, START_LON
		, MEM_ID
		, MEM_NAME
		, MEM_NICK
		, REPLACE(REPLACE(ORIGIN_NAME, '_', ' '), '.gpx', '') as ORIGIN_NAME
		, CHANGE_NAME
		, IMGPATH
	FROM FEED
	JOIN GPX_FILES USING(FEED_INDEX)
	JOIN MEMBER USING(MEM_ID)
	WHERE FEED_PUBLIC_TYPE ='전체'
	AND FEED_RPR_NY ='N'
	AND FEED_DEL_NY = 'N' 
	AND FEED_CNT LIKE ?
	ORDER BY FEED_INDEX DESC
</entry>



<!--전체피드에서 찜 많은순서대로 피드정렬 -->
<entry key="selectBookmarkSorting">
 SELECT 
    FEED_INDEX,
    TO_CHAR(FEED_DATE,'YYYY-MM-DD HH24:MI') "DATE",
    FEED.FEED_TITLE,
    FEED.FEED_CNT,
    FEED.FEED_EVAL,
    FEED.DISTANCE,
    FEED.START_LAT,
    FEED.START_LON,
    MEMBER.MEM_ID,
    MEMBER.MEM_NICK,
    MEMBER.MEM_NAME,
    REPLACE(REPLACE(ORIGIN_NAME, '_', ' '), '.gpx', '') as ORIGIN_NAME,
    CHANGE_NAME,
    COUNT(BOOKMARK.BK_NO) AS BOOKMARK_COUNT,
    IMGPATH
FROM FEED
JOIN MEMBER MEMBER ON FEED.MEM_ID = MEMBER.MEM_ID
LEFT JOIN BOOKMARK ON FEED.FEED_INDEX = BOOKMARK.BK_NO
JOIN GPX_FILES G USING(FEED_INDEX)
WHERE 
    FEED.FEED_PUBLIC_TYPE ='전체' 
    AND FEED.FEED_RPR_NY = 'N' 
    AND FEED.FEED_DEL_NY = 'N'
    AND MEMBER.MEM_ID NOT IN (SELECT CUT_ID FROM CUT C WHERE C.MEM_ID = ? AND CUT_STATUS ='Y')
GROUP BY 
    FEED_INDEX,
    FEED.FEED_DATE,
    FEED.FEED_TITLE,
    FEED.FEED_CNT,
    FEED.FEED_EVAL,
    FEED.DISTANCE,
    FEED.START_LAT,
    FEED.START_LON,
    MEMBER.MEM_ID,
    MEMBER.MEM_NICK,
    MEMBER.MEM_NAME,
    CHANGE_NAME,
    ORIGIN_NAME,
    IMGPATH
ORDER BY 
    BOOKMARK_COUNT DESC, 
    FEED_INDEX DESC
</entry>

<!-- 친구피드에서 찜 많은 순서대로 피드정렬 -->
<entry key="selectFriendBookmarkSorting">
	SELECT 
	    FEED_INDEX,
	    TO_CHAR(FEED_DATE,'YYYY-MM-DD HH24:MI') "DATE",
	    FEED.FEED_TITLE,
	    FEED.FEED_CNT,
	    FEED.FEED_EVAL,
	    FEED.DISTANCE,
	    FEED.START_LAT,
	    FEED.START_LON,
	    MEMBER.MEM_ID,
	    MEMBER.MEM_NICK,
	    MEMBER.MEM_NAME,
	    REPLACE(REPLACE(ORIGIN_NAME, '_', ' '), '.gpx', '') as ORIGIN_NAME,
	    CHANGE_NAME,
	    COUNT(BOOKMARK.BK_NO) AS BOOKMARK_COUNT,
	    IMGPATH
	FROM FEED FEED
	JOIN FOLLOW FW ON(FEED.MEM_ID = FW.FLW_ID )
	JOIN MEMBER MEMBER ON FEED.MEM_ID = MEMBER.MEM_ID
	LEFT JOIN BOOKMARK ON FEED.FEED_INDEX = BOOKMARK.BK_NO
	JOIN GPX_FILES G USING(FEED_INDEX)
	WHERE 
	    FEED.MEM_ID IN (SELECT FLW_ID FROM FOLLOW F WHERE F.MEM_ID = ? AND FLW_STATUS ='Y')
	    AND FEED.FEED_RPR_NY = 'N' 
	    AND FEED.FEED_DEL_NY = 'N'
	    AND MEMBER.MEM_ID NOT IN (SELECT CUT_ID FROM CUT C WHERE C.MEM_ID = ? AND CUT_STATUS ='Y')
	    AND FEED_PUBLIC_TYPE != '비공개'
	GROUP BY 
	    FEED_INDEX,
	    FEED.FEED_DATE,
	    FEED.FEED_TITLE,
	    FEED.FEED_CNT,
	    FEED.FEED_EVAL,
	    FEED.DISTANCE,
	    FEED.START_LAT,
	    FEED.START_LON,
	    MEMBER.MEM_ID,
	    MEMBER.MEM_NICK,
	    MEMBER.MEM_NAME,
	    CHANGE_NAME,
	    ORIGIN_NAME,
	    IMGPATH
	ORDER BY 
	    BOOKMARK_COUNT DESC, 
	    FEED_INDEX DESC
</entry>


<!-- 내 피드에서 찜 많은 순서대로 피드정렬 -->
<entry key="selectMyBookmarkSorting">
SELECT 
    FEED_INDEX,
    TO_CHAR(FEED_DATE,'YYYY-MM-DD HH24:MI') "DATE",
    FEED.FEED_TITLE,
    FEED.FEED_CNT,
    FEED.FEED_EVAL,
    FEED.DISTANCE,
    FEED.START_LAT,
    FEED.START_LON,
    MEMBER.MEM_ID,
    MEMBER.MEM_NICK,
    MEMBER.MEM_NAME,
    REPLACE(REPLACE(ORIGIN_NAME, '_', ' '), '.gpx', '') as ORIGIN_NAME,
    CHANGE_NAME,
    COUNT(BOOKMARK.BK_NO) AS BOOKMARK_COUNT,
    IMGPATH
FROM FEED FEED
JOIN MEMBER MEMBER ON FEED.MEM_ID = MEMBER.MEM_ID
LEFT JOIN BOOKMARK ON FEED.FEED_INDEX = BOOKMARK.BK_NO
JOIN GPX_FILES G USING(FEED_INDEX)
WHERE  FEED.MEM_ID = ?
    AND FEED.FEED_RPR_NY = 'N' 
    AND FEED.FEED_DEL_NY = 'N'
GROUP BY 
    FEED_INDEX,
    FEED.FEED_DATE,
    FEED.FEED_TITLE,
    FEED.FEED_CNT,
    FEED.FEED_EVAL,
    FEED.DISTANCE,
    FEED.START_LAT,
    FEED.START_LON,
    MEMBER.MEM_ID,
    MEMBER.MEM_NICK,
    MEMBER.MEM_NAME,
    CHANGE_NAME,
    ORIGIN_NAME,
    IMGPATH
ORDER BY 
    BOOKMARK_COUNT DESC, 
    FEED_INDEX DESC
</entry>


<!-- 피드 삭제 -->
<entry key="deleteFeed">
UPDATE FEED
SET FEED_DEL_NY = 'Y'
WHERE FEED_INDEX = ?
</entry>



<entry key="updateRpr">
UPDATE FEED
SET FEED_RPR_NY = 'Y',
    FEED_RPR_DATE = SYSDATE,
    FEED_RPR_ID = ?
WHERE FEED_INDEX = ?


</entry>


<entry key="selectFeed">
    SELECT 
          FEED_INDEX
        , TO_CHAR(FEED_DATE,'YYYY-MM-DD HH24:MI') "DATE"
        , FEED_TITLE
        , FEED_CNT
        , FEED_EVAL
        , FEED_PUBLIC_TYPE
		, FEED_PATH_NY
        , DISTANCE
        , START_LAT
        , START_LON
        , MEM_ID
        , MEM_NAME
        , MEM_NICK
        , REPLACE(REPLACE(ORIGIN_NAME, '_', ' '), '.gpx', '') as ORIGIN_NAME
        , CHANGE_NAME
        , IMGPATH
     FROM FEED
     JOIN GPX_FILES USING(FEED_INDEX)
     JOIN MEMBER USING(MEM_ID)
	WHERE FEED_INDEX = ? 
	</entry>

	
	<entry key="updateFeed">
		UPDATE FEED
		   SET FEED_TITLE =?,
		       FEED_CNT = ?,
		       FEED_EVAL = ?,
		       FEED_PUBLIC_TYPE = ?,
		       FEED_PATH_NY = ?,
		       DISTANCE = ?,
		       START_LAT = ?,
		       START_LON = ?,
		       IMGPATH = ?
		  WHERE FEED_INDEX = ?
	</entry>
	
	<entry key="updateGpx">
		UPDATE GPX_FILES
		   SET ORIGIN_NAME = ?,
		       CHANGE_NAME = ?
		 WHERE FEED_INDEX = ?
	</entry>
	
	



<!-- 피드리스트 완전 전체 조회 -->
<entry key="selectFeedList">
SELECT
FEED_INDEX
,TO_CHAR(FEED_DATE,'YYYY-MM-DD HH24:MI') "DATE"
,FEED_TITLE
,FEED_CNT
,FEED_EVAL
,FEED_PUBLIC_TYPE
,FEED_PATH_NY
,FEED_RPR_NY
,TO_CHAR(FEED_RPR_DATE,'YYYY-MM-DD HH24:MI') "RPR_DATE"
,DISTANCE
,START_LAT
,START_LON
,FEED_DEL_NY
,MEM_ID
,HIT
,FEED_RPR_ID
,MEM_NAME
, MEM_NICK
, REPLACE(REPLACE(ORIGIN_NAME, '_', ' '), '.gpx', '') as ORIGIN_NAME
, CHANGE_NAME
, IMGPATH
     FROM FEED
     JOIN GPX_FILES USING(FEED_INDEX)
     JOIN MEMBER USING(MEM_ID)
</entry>

<!-- 페이징을위한 게시물 개수 조회 -->
<entry key="selectListCount">
SELECT
    COUNT(*) COUNT
    FROM feed

</entry>

<!-- 페이징과함께 피드조회  -->
<entry key="selectFeedList1">
SELECT * FROM 
(SELECT ROWNUM RNUM, A.*
 FROM     
(SELECT
FEED_INDEX
,TO_CHAR(FEED_DATE,'YYYY-MM-DD HH24:MI') "DATE"
,FEED_TITLE
,FEED_CNT
,FEED_EVAL
,FEED_PUBLIC_TYPE
,FEED_PATH_NY
,FEED_RPR_NY
,TO_CHAR(FEED_RPR_DATE,'YYYY-MM-DD HH24:MI') "RPR_DATE"
,DISTANCE
,START_LAT
,START_LON
,FEED_DEL_NY
,MEM_ID
,HIT
,FEED_RPR_ID
,MEM_NAME
, MEM_NICK
, REPLACE(REPLACE(ORIGIN_NAME, '_', ' '), '.gpx', '') as ORIGIN_NAME
, CHANGE_NAME
, IMGPATH
     FROM FEED
     JOIN GPX_FILES USING(FEED_INDEX)
     JOIN MEMBER USING(MEM_ID)) A
     )
    WHERE RNUM BETWEEN ? AND  ?
    </entry>


<!-- 신고된 피드 리스트 조회 -->
<entry key="selectRprList">
         SELECT
FEED_INDEX
,TO_CHAR(FEED_DATE,'YYYY-MM-DD HH24:MI') "DATE"
,FEED_TITLE
,FEED_CNT
,FEED_EVAL
,FEED_PUBLIC_TYPE
,FEED_PATH_NY
,FEED_RPR_NY
,TO_CHAR(FEED_RPR_DATE,'YYYY-MM-DD HH24:MI') "RPR_DATE"
,DISTANCE
,START_LAT
,START_LON
,FEED_DEL_NY
,MEM_ID
,HIT
,FEED_RPR_ID
,MEM_NAME
, MEM_NICK
, REPLACE(REPLACE(ORIGIN_NAME, '_', ' '), '.gpx', '') as ORIGIN_NAME
, CHANGE_NAME
, IMGPATH
     FROM FEED
     JOIN GPX_FILES USING(FEED_INDEX)
     JOIN MEMBER USING(MEM_ID)
     WHERE FEED_RPR_NY = 'Y'


</entry>

<!-- 신고상태 원상태로 복귀 -->
<entry key="updateRprRestore">
UPDATE FEED
SET FEED_RPR_NY = 'N'
WHERE FEED_INDEX = ?

</entry>



<!-- 누전신고수 업데이트 -->
<entry key="updateRprCum">
update member 
set mem_rpr_cum = +1
WHERE MEM_ID = ( select MEM_ID
from feed
where FEED_INDEX = ? )
</entry>


<entry key="selectDelList">
        SELECT
FEED_INDEX
,TO_CHAR(FEED_DATE,'YYYY-MM-DD HH24:MI') "DATE"
,FEED_TITLE
,FEED_CNT
,FEED_EVAL
,FEED_PUBLIC_TYPE
,FEED_PATH_NY
,FEED_RPR_NY
,TO_CHAR(FEED_RPR_DATE,'YYYY-MM-DD HH24:MI') "RPR_DATE"
,DISTANCE
,START_LAT
,START_LON
,FEED_DEL_NY
,MEM_ID
,HIT
,FEED_RPR_ID
,MEM_NAME
, MEM_NICK
, REPLACE(REPLACE(ORIGIN_NAME, '_', ' '), '.gpx', '') as ORIGIN_NAME
, CHANGE_NAME
, IMGPATH
     FROM FEED
     JOIN GPX_FILES USING(FEED_INDEX)
     JOIN MEMBER USING(MEM_ID)
     WHERE FEED_DEL_NY = 'Y'


</entry>

</properties>





























